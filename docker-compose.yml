version: '3'

networks:
  app-tier:
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    container_name: "postgres"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./data/db-data/postgres/:/var/lib/postgresql/data/
  # Observability tools

  jaeger:
    image: jaegertracing/jaeger-agent
    container_name: jaeger
    ports:
      - "14268:14268"
      - "6831:6831"
      - "5778:5778"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    command: ["--reporter.grpc.host-port=otel:14250"]

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: "otel"
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel/config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "55680:55680"

  grafana:
    image: grafana/grafana:latest
    container_name: "grafana"
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana/:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret

  tempo:
    image: grafana/tempo:latest
    container_name: "tempo"
    volumes:
      - ./config/tempo/tempo-local.yaml:/etc/tempo-local.yaml
    command: "-config.file=/etc/tempo-local.yaml"
    ports:
      - "3100:3100"
      - "3200:3200"